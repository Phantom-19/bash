#!/data/data/com.termux/files/usr/bin/bash

## Programme de style Termux
## Auteur : Mr Hacker_K

## Répertoires
PREFIX="/data/data/com.termux/files/usr"
TDIR="$HOME/.termux"
CDIR="$PREFIX/share/termux-style/colors"
FDIR="$PREFIX/share/termux-style/fonts"

## Corde
APLC="[*] Application d'un schéma de couleurs..."
APLF="[*] Application de nouvelles polices..."
APLD="[!] Appliqué avec succès."
RES="[*] Paramètres de rechargement..."
REL="am broadcast --user 0 -a com.termux.app.reload_style com.termux"

## Couleurs
R='\033[1;91m'
B='\033[1;34m'
C='\033[0;36m'
G='\033[1;32m'
W='\033[1;37m'
Y='\033[1;33m'
Gr='\033[38;5;245m'
V='\033[38;5;221m'
O='\033[38;5;214m'
## Banniere

clear
echo
echo
echo -e $B"    ┌────────────────────────────────────────┐"
echo -e $B"    │$R░▀█▀░█▀▀░█▀▄░█▄█░░░░$G█▀▀░░░$B│"
echo -e $B"    │$R░░█░░█▀▀░█▀▄░█░█$Y▄▄▄░$G▀▀█░░$B│"
echo -e $B"    │$R░░▀░░▀▀▀░▀░▀░▀░▀░░░░$G▀▀▀░░▀░░$B│"
echo -e $B"    └────────────────────────────────────────┘"
echo -e $B"    [$R*$B]$W Par-$Gr Mr $V Hacker_K "
echo
## Menu
echo -e $B"    [$R"1"$B]$G Couleurs"
echo -e $B"    [$R"2"$B]$G Les polices"
echo -e $B"    [$R"3"$B]$G Info "
echo -e $B"    [$R"0"$B]$G Quitter"
echo
echo "   $C   [Sélectionnez une option] "
echo
echo -ne $Gr"Mr $V Hacker_K :  $W  "
read opt

if [ $opt = "1" ] || [ $opt = "01" ];
then
echo

#**********************************************#
# liste des jeux de couleurs
echo -e $B"        [$G"01"$B]$Y 3024-dark                  $B[$G"11"$B]$Y atelierheath-dark"
echo -e $B"        [$G"02"$B]$Y 3024-light                 $B[$G"12"$B]$Y atelierheath-light"
echo -e $B"        [$G"03"$B]$Y apathy-dark                $B[$G"13"$B]$Y atelierlakeside-dark"
echo -e $B"        [$G"04"$B]$Y apathy-light               $B[$G"14"$B]$Y atelierlakeside-light"
echo -e $B"        [$G"05"$B]$Y ashes-dark                 $B[$G"15"$B]$Y atelierseaside-dark"
echo -e $B"        [$G"06"$B]$Y ashes-light                $B[$G"16"$B]$Y atelierseaside-light"
echo -e $B"        [$G"07"$B]$Y atelierdune-dark           $B[$G"17"$B]$Y bespin-dark"
echo -e $B"        [$G"08"$B]$Y atelierdune-light          $B[$G"18"$B]$Y bespin-light"
echo -e $B"        [$G"09"$B]$Y atelierforest-dark         $B[$G"19"$B]$Y brewer-dark"
echo -e $B"        [$G"10"$B]$Y atelierforest-light        $B[$G"20"$B]$Y brewer-light"
echo
echo -ne $C"  [Appuyez sur 'P' pour plus ou 'C' pour continuer]: "
read plus
if [ $plus = "p" ] || [ $plus = "P" ];
then
echo -e $B"        [$G"21"$B]$Y clair-foncé                $B[$G"31"$B]$Y eighties-dark"
echo -e $B"        [$G"22"$B]$Y lumière brillante          $B[$G"32"$B]$Y eighties-light"
echo -e $B"        [$G"23"$B]$Y noir craie                 $B[$G"33"$B]$Y embers-dark"
echo -e $B"        [$G"24"$B]$Y craie-lumière              $B[$G"34"$B]$Y embers-light"
echo -e $B"        [$G"25"$B]$Y codeschool-dark            $B[$G"35"$B]$Y flat-dark"
echo -e $B"        [$G"26"$B]$Y codeschool-light           $B[$G"36"$B]$Y flat-light"
echo -e $B"        [$G"27"$B]$Y couleurs-foncé             $B[$G"37"$B]$Y google-dark"
echo -e $B"        [$G"28"$B]$Y couleurs-lumière           $B[$G"38"$B]$Y google-light"
echo -e $B"        [$G"29"$B]$Y sombre par défaut          $B[$G"39"$B]$Y grayscale-dark"
echo -e $B"        [$G"30"$B]$Y lumière par défaut         $B[$G"40"$B]$Y grayscale-light"
echo
echo -e $B"        [$G"41"$B]$Y greenscreen-dark           $B[$G"51"$B]$Y materia"
echo -e $B"        [$G"42"$B]$Y greenscreen-light          $B[$G"52"$B]$Y mocha-dark"
echo -e $B"        [$G"43"$B]$Y harmonic16-dark            $B[$G"53"$B]$Y mocha-light"
echo -e $B"        [$G"44"$B]$Y harmonic16-light           $B[$G"54"$B]$Y monokai-dark"
echo -e $B"        [$G"45"$B]$Y isotope-dark               $B[$G"55"$B]$Y monokai-light"
echo -e $B"        [$G"46"$B]$Y isotope-light              $B[$G"56"$B]$Y ocean-dark"
echo -e $B"        [$G"47"$B]$Y londontube-dark            $B[$G"57"$B]$Y ocean-light"
echo -e $B"        [$G"48"$B]$Y londontube-light           $B[$G"58"$B]$Y paraiso-dark"
echo -e $B"        [$G"49"$B]$Y marrakesh-dark             $B[$G"59"$B]$Y paraiso-light"
echo -e $B"        [$G"50"$B]$Y marrakesh-light            $B[$G"60"$B]$Y railscasts-dark"
echo
echo -e $B"        [$G"61"$B]$Y railscasts-light           $B[$G"71"$B]$Y twilight-light"
echo -e $B"        [$G"62"$B]$Y shapeshifter-dark          $B[$G"72"$B]$Y black-on-white"
echo -e $B"        [$G"63"$B]$Y shapeshifter-light         $B[$G"73"$B]$Y dracula"
echo -e $B"        [$G"64"$B]$Y b16-solarized-dark         $B[$G"74"$B]$Y gnometerm"
echo -e $B"        [$G"65"$B]$Y b16-solarized-light        $B[$G"75"$B]$Y gotham"
echo -e $B"        [$G"66"$B]$Y summerfruit-dark           $B[$G"76"$B]$Y gruvbox-dark"
echo -e $B"        [$G"67"$B]$Y summerfruit-light          $B[$G"77"$B]$Y gruvbox-light"
echo -e $B"        [$G"68"$B]$Y tomorrow-dark              $B[$G"78"$B]$Y material"
echo -e $B"        [$G"69"$B]$Y tomorrow-light             $B[$G"79"$B]$Y nancy"
echo -e $B"        [$G"70"$B]$Y twilight-dark              $B[$G"80"$B]$Y neon"
echo
echo -e $B"        [$G"81"$B]$Y nord"
echo -e $B"        [$G"82"$B]$Y rydgel"
echo -e $B"        [$G"83"$B]$Y smyck"
echo -e $B"        [$G"84"$B]$Y solarized-dark"
echo -e $B"        [$G"85"$B]$Y solarized-light"
echo -e $B"        [$G"86"$B]$Y tomorrow-night"
echo -e $B"        [$G"87"$B]$Y white-on-black"
echo -e $B"        [$G"88"$B]$Y wild-cherry"
echo -e $B"        [$G"89"$B]$Y zenburn"
echo 
echo "     [Choisissez le jeu de couleurs que vous souhaitez appliquer]"
echo 
echo -ne $Gr"Mr $V Hacker_K :  $W"
read cs 

if [ $cs = "1" ] || [ $cs = "01" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-3024-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "2" ] || [ $cs = "02" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-3024-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "3" ] || [ $cs = "03" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-apathy-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "4" ] || [ $cs = "04" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-apathy-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "5" ] || [ $cs = "05" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-ashes-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "6" ] || [ $cs = "06" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-ashes-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "7" ] || [ $cs = "07" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-atelierdune-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "8" ] || [ $cs = "08" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-atelierdune-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "9" ] || [ $cs = "09" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-atelierforest-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "10" ] || [ $cs = "" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-atelierforest-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "11" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-atelierheath-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "12" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-atelierheath-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "13" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-atelierlakeside-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "14" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-atelierlakeside-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "15" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-atelierseaside-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "16" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-atelierseaside-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "17" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-bespin-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "18" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-bespin-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "19" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-brewer-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "20" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-brewer-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "21" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-bright-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "22" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-bright-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "23" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-chalk-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "24" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-chalk-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "25" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-codeschool-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "26" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-codeschool-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "27" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-colors-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "28" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-colors-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "29" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-default-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "30" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-default-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "31" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-eighties-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "32" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-eighties-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "33" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-embers-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "34" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-embers-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "35" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-flat-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "36" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-flat-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "37" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-google-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "38" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-google-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "39" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-grayscale-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "40" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-grayscale-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "41" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-greenscreen-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "42" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-greenscreen-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "43" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-harmonic16-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "44" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-harmonic16-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "45" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-isotope-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "46" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-isotope-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "47" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-londontube-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "48" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-londontube-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "49" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-marrakesh-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "50" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-marrakesh-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "51" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-materia.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "52" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-mocha-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "53" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-mocha-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "54" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-monokai-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "55" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-monokai-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "56" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-ocean-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "57" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-ocean-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "58" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-paraiso-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "59" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-paraiso-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "60" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-railscasts-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "61" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-railscasts-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "62" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-shapeshifter-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "63" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-shapeshifter-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "64" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-solarized-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "65" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-solarized-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "66" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-summerfruit-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "67" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-summerfruit-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "68" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-tomorrow-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "69" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-tomorrow-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "70" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-twilight-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "71" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/base16-twilight-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "72" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/black-on-white.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "73" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/dracula.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "74" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/gnometerm.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "75" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/gotham.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "76" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/gruvbox-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "77" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/gruvbox-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "78" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/material.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "79" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/nancy.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "80" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/neon.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "81" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/nord.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "82" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/rydgel.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "83" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/smyck.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "84" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/solarized-dark.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "85" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/solarized-light.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "86" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/tomorrow-night.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "87" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/white-on-black.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "88" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/wild-cherry.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $cs = "89" ];
then
echo
echo -e $C"    $APLC"
cp $CDIR/zenburn.properties $TDIR/colors.properties
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

## Sur une mauvaise entrée
else
echo
echo -e $Y"    [!] Veuillez choisir une option valide..."
echo -e $G"    [*] Retour au menu principal..."
sleep 1
clear
$PREFIX/share/Term-s/theme
echo
exit
fi

#************************************************#

elif [ $opt = "2" ] || [ $opt = "02" ];
then
echo

#**********************************************#
# liste des polices disponibles Term-s
echo -e $B"        [$G"01"$B]$Y Anonymous-Pro         $B[$G"11"$B]$Y Inconsolata"
echo -e $B"        [$G"02"$B]$Y Courier-Prime         $B[$G"12"$B]$Y Iosevka"
echo -e $B"        [$G"03"$B]$Y DejaVu                $B[$G"13"$B]$Y LiberationMono"
echo -e $B"        [$G"04"$B]$Y Fantasque             $B[$G"14"$B]$Y Meslo"
echo -e $B"        [$G"05"$B]$Y FiraCode              $B[$G"15"$B]$Y Monofur"
echo -e $B"        [$G"06"$B]$Y Fira                  $B[$G"16"$B]$Y Monoid"
echo -e $B"        [$G"07"$B]$Y GNU-FreeFont          $B[$G"17"$B]$Y OpenDyslexic"
echo -e $B"        [$G"08"$B]$Y Go-font               $B[$G"18"$B]$Y Roboto"
echo -e $B"        [$G"09"$B]$Y Pirate                $B[$G"19"$B]$Y Source-Code-Pro"
echo -e $B"        [$G"10"$B]$Y Hermit                $B[$G"20"$B]$Y Ubuntu"
echo
echo -ne $Gr"Mr $V Hacker_K : $W"
read fs
 
if [ $fs = "1" ] || [ $fs = "01" ];
then
echo
echo -e $C"    $APLF"
rm $TDIR/font.ttf
cp $FDIR/Anonymous-Pro.ttf $TDIR/font.ttf
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $fs = "2" ] || [ $fs = "02" ];
then
echo
echo -e $C"    $APLF"
rm $TDIR/font.ttf
cp $FDIR/Courier-Prime.ttf $TDIR/font.ttf
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $fs = "3" ] || [ $fs = "03" ];
then
echo
echo -e $C"    $APLF"
rm $TDIR/font.ttf
cp $FDIR/DejaVu.ttf $TDIR/font.ttf
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $fs = "4" ] || [ $fs = "04" ];
then
echo
echo -e $C"    $APLF"
rm $TDIR/font.ttf
cp $FDIR/Fantasque.ttf $TDIR/font.ttf
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $fs = "5" ] || [ $fs = "05" ];
then
echo
echo -e $C"    $APLF"
rm $TDIR/font.ttf
cp $FDIR/FiraCode.ttf $TDIR/font.ttf
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $fs = "6" ] || [ $fs = "06" ];
then
echo
echo -e $C"    $APLF"
rm $TDIR/font.ttf
cp $FDIR/Fira.ttf $TDIR/font.ttf
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $fs = "7" ] || [ $fs = "07" ];
then
echo
echo -e $C"    $APLF"
rm $TDIR/font.ttf
cp $FDIR/GNU-FreeFont.ttf $TDIR/font.ttf
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $fs = "8" ] || [ $fs = "08" ];
then
echo
echo -e $C"    $APLF"
rm $TDIR/font.ttf
cp $FDIR/Go.ttf $TDIR/font.ttf
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $fs = "9" ] || [ $fs = "09" ];
then
echo
echo -e $C"    $APLF"
rm $TDIR/font.ttf
cp $FDIR/Hack.ttf $TDIR/font.ttf
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $fs = "10" ];
then
echo
echo -e $C"    $APLF"
rm $TDIR/font.ttf
cp $FDIR/Hermit.ttf $TDIR/font.ttf
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $fs = "11" ];
then
echo
echo -e $C"    $APLF"
rm $TDIR/font.ttf
cp $FDIR/Inconsolata.ttf $TDIR/font.ttf
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $fs = "12" ];
then
echo
echo -e $C"    $APLF"
rm $TDIR/font.ttf
cp $FDIR/Iosevka.ttf $TDIR/font.ttf
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $fs = "13" ];
then
echo
echo -e $C"    $APLF"
rm $TDIR/font.ttf
cp $FDIR/LiberationMono.ttf $TDIR/font.ttf
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $fs = "14" ];
then
echo
echo -e $C"    $APLF"
rm $TDIR/font.ttf
cp $FDIR/Meslo.ttf $TDIR/font.ttf
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $fs = "15" ];
then
echo
echo -e $C"    $APLF"
rm $TDIR/font.ttf
cp $FDIR/Monofur.ttf $TDIR/font.ttf
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $fs = "16" ];
then
echo
echo -e $C"    $APLF"
rm $TDIR/font.ttf
cp $FDIR/Monoid.ttf $TDIR/font.ttf
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $fs = "17" ];
then
echo
echo -e $C"    $APLF"
rm $TDIR/font.ttf
cp $FDIR/OpenDyslexic.ttf $TDIR/font.ttf
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $fs = "18" ];
then
echo
echo -e $C"    $APLF"
rm $TDIR/font.ttf
cp $FDIR/Roboto.ttf $TDIR/font.ttf
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $fs = "19" ];
then
echo
echo -e $C"    $APLF"
rm $TDIR/font.ttf
cp $FDIR/Source-Code-Pro.ttf $TDIR/font.ttf
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

elif [ $fs = "20" ];
then
echo
echo -e $C"    $APLF"
rm $TDIR/font.ttf
cp $FDIR/Ubuntu.ttf $TDIR/font.ttf
$REL > /dev/null
echo -e $G"    $RES"
echo -e $Y"    $APLD"
echo
exit

## Action d'entrée incorrecte
else
echo
echo -e $Y"    [!] Veuillez choisir une option valide..."
echo -e $G"    [*] Retour au menu principal..."
sleep 1
clear
$PREFIX/share/Term-s/theme
echo
exit
fi

#************************************************#

elif [ $opt = "3" ] || [ $opt = "03" ];
then
echo
echo -e $B"    ┌───────────────────────────────────────────────────────────────┐"
echo -e $B"    │    $Y____  ___  ____ ____ ___  ____ ____  $R___  ____  $C___ ____ ____ _  _    ____ $B│"
echo -e $B"    │    $Y|__|  |__] |__/ |  | |__] |  | [__   $R|  \ |___  $C |  |___ |__/ |\/| __ [__  $B│"
echo -e $B"    │    $Y|  |  |    |  \ |__| |    |__| ___]  $R|__/ |___  $C |  |___ |  \ |  |    ___] $B│"
echo -e $B"    │───────────────────────────────────────────────────────────────│"
echo -e $B"    │                                                               │"
echo -e $B"    │ $R>>  $G'Term-s'$B est un programme simple qui fournit des couleurs $B│"
echo -e $B"    │     des schémas et des polices prêtes pour les lignes         $B│"
echo -e $B"    │     électriques pour personnaliserapparition du terminal termux. $B│"
echo -e $B"    │                                                               │"
echo -e $B"    │                                                               │"
echo -e $B"    │ $R>>$B  Auteur   : $G Mr Kacker_K                                 $B│"
echo -e $B"    │     Email    : $G adi1090x@gmail.com                            $B│"
echo -e $B"    │     Github   : $G https://github.com/Phantom-19                 $B│"
echo -e $B"    │     Facebook : $G https://www.facebook.com/Faxel19               $B│"
echo -e $B"    │                                                               │"
echo -e $B"    │                                                               │"
echo -e $B"    │ $R>> $B Une application Android est également disponible pour  $B│"
echo -e $B"    │      $B  personnaliser termux. Voici le lien du code source,   $B│"
echo -e $B"    │    $G https://github.com/Phantom-19/Term-s                  $B│"
echo -e $B"    │                                                               │"
echo -e $B"    │                                                               │"
echo -e $B"    │ $R>> $B If you are enjoying this program, Then please buy the     $B│"
echo -e $B"    │     $G'termux-styling'$B app from google play to support the      $B│"
echo -e $B"    │     developers. they deserve it.                              $B│"
echo -e $B"    │                                                               │"
echo -e $B"    │───────────────────────────────────────────────────────────────│"
echo -e $B"    │  $Y[$R"!"$Y]$R Veuillez ne pas copier mon travail.                $B│"
echo -e $B"    └───────────────────────────────────────────────────────────────┘"
echo
echo -ne $C"    [*] Appuyez sur 'Entrer' pour revenir au menu principal."
read enter 
$PREFIX/share/Term-s/theme

#************************************************#

elif [ $opt = "0" ] || [ $opt = "00" ];
then
echo
echo -e $Y"    [*] Au revoir, passez une bonne journée!"
sleep 1
exit

#************************************************#

## Action d'entrée incorrecte
else
echo
echo -e $Y"    [!] Mauvaise entrée..."
echo -e $G"    [*] Réessayer..."
sleep 1
clear
$PREFIX/share/Term-s/theme
echo
fi

##**********************************************##
##												##
##   Developper par : Mr Hacker_K   ##
##   Email: faxelh18@gmail.com					##
##												##
##**********************************************##
